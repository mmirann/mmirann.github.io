---
layout: post
title: "[백준] 1463번 1로 만들기"
subtitle: ""
categories: [Algorithm/Solving]
tags: [DP, BFS]
comments: true
---

> DP, BFS

## 문제
---

정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
2. X가 2로 나누어 떨어지면, 2로 나눈다
3. 1을 뺀다.

정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

* 힌트: 10의 경우 10->9->3->1로 3번만에 만들 수 있다.

## 풀이
---

DP/BFS 두가지 방법으로 풀이가 가능하다.
1. DP
   배열에 각 최소횟수를 저장한다.  
   * 점화식: <point>dp[n]=min(dp[n-1]+1,dp[n/3]+1,dp[n/2]+1)</point>
2. 직전에 풀었던 숨바꼭질 문제랑 비슷해서 BFS로도 풀이가 가능하다. BFS/DFS로 문제를 풀 땐 항상 방문했는지 확인하는 배열도 필요하다. 잊지말기!

## 코드
---
사용언어: C++
> DP

```cpp
#include <iostream>
#include <stdio.h>
using namespace std;

int cnt = 0;
int dp[10000001];

int solution(int x)
{
    dp[1] = 0;
    for (int i = 2; i <= x; i++)
    {
        dp[i] = dp[i - 1] + 1;
        if (i % 2 == 0)
            dp[i] = min(dp[i], dp[i / 2] + 1);
        if (i % 3 == 0)
            dp[i] = min(dp[i], dp[i / 3] + 1);
    }

    return dp[x];
}

int main(void)
{
    int x;
    scanf("%d", &x);
    cout << solution(x) << endl;
}
```
> BFS

```cpp
#include <iostream>
#include <stdio.h>
#include <queue>
using namespace std;

bool checked[1000000 + 1];

int BFS(int n)
{
    int x, y;
    queue<pair<int, int>> q;
    q.push(make_pair(n, 0));
    checked[n] = true;

    while (!q.empty())
    {
        x = q.front().first;
        y = q.front().second;
        q.pop();

        if (x == 1)
            break;

        if (!checked[x - 1])
        {
            checked[x - 1] = true;
            q.push(make_pair(x - 1, y + 1));
        }
        if (x % 3 == 0 && !checked[x / 3])
        {
            checked[x / 3] = true;
            q.push(make_pair(x / 3, y + 1));
        }
        if (x % 2 == 0 && !checked[x / 2])
        {
            checked[x / 2] = true;
            q.push(make_pair(x / 2, y + 1));
        }
    }
    return y;
}
int main()
{
    int n;
    scanf("%d", &n);
    if (n == 1)
    {
        cout << 0 << endl;
        return 0;
    }
    cout << BFS(n) << endl;
    return 0;
}
```

## 출처
---

* [백준](https://www.acmicpc.net/problem/1463)