---
layout: post
title: "[백준] 10610번 30"
subtitle: ""
categories: [Algorithm/Solving]
tags: [Greedy]
comments: true
---

> Greedy Algorithm


## 문제
---

어느 날, 미르코는 우연히 길거리에서 양수 N을 보았다. 미르코는 30이란 수를 존경하기 때문에, 그는 길거리에서 찾은 수에 포함된 숫자들을 섞어 30의 배수가 되는 가장 큰 수를 만들고 싶어한다.

미르코를 도와 그가 만들고 싶어하는 수를 계산하는 프로그램을 작성하라.

## 풀이
---
30의 배수가 되기 위한 조건

1. 0이 존재해야함
2. 각 자리의 숫자 합이 3의 배수여야함

* long long으로도 표현 못하므로 string으로 풀어야함!
* string에서 find를 쓸 때 존재하지않으면 -1을 반환
* <point>string을 int로 변환할 땐 **stoi**, char을 int로 변환할 땐 **-'0'**</point>


## 코드
---

사용언어: C++

```cpp
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <string>
using namespace std;

string solution(string s)
{
    int sum = 0;
    if (s.find("0") == -1)
        return "-1";
    else
    {
        for (int i = 0; i < s.length(); i++)
        {
            sum += s[i] - '0';
        }
        if (sum % 3 == 0)
        {
            sort(s.begin(), s.end(), greater<int>());
            return s;
        }
        else
            return "-1";
    }
}
int main()
{
    string input;
    cin >> input;
    cout << solution(input) << endl;
    return 0;
}
```
