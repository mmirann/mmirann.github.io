---
layout: post
title: "[ESP32] ESP32 GPIO"
subtitle: ""
categories: [IoT/Arduino]
tags: [IoT, Arduino]
comments: true
---

## <span style="color:#383838">  ESP32 PIN 별 사용법 </span>

---

ESP 모듈은 블루투스, 와이파이를 기본적으로 사용할 수 있으며 36개의 GPIO가 사용 가능하다. 또한 별도로 보드 라이브러리를 설치하기만 하면 아두이노 IDE로 업로드가 가능하다.
NodeMCU 보드는 이 ESP32 칩/모듈을 간단하게 사용할 수 있는 개발 보드이다.

## ESP32 Peripheral

- 18 ADC(Analog-to-Digital Converter) channel
- 3 SPI
- 3 UART
- 2 I2C
- 16 PWM
- 2 DAC (Digital-to-Analog Converter)
- 2 I2S
- 10 Capacitive sensing GPIO

ADC와 DAC는 특정 핀에서만 사용할 수 있지만 나머지들은 코드에서 설정한대로 사용이 가능하다. 이와 같이 핀을 따로 코드에서 설정해서 사용할 수 있지만, 기본적으로 고정되어 있는 기능도 있다. 아래 핀 맵에 나타나있다.

## ESP32 PIN MAP

[
![9079562_15791585746695](https://user-images.githubusercontent.com/48276682/107169498-59db7c00-6a01-11eb-9c22-b4ceec1aee5a.jpg)
](url)

## ESP32 핀별 기능

#### INPUT Only Pins

입력 전용 핀, 내부 풀업/풀다운 없음, 출력으로 사용불가

- GPIO 34
- GPIO 35
- GPIO 36
- GPIO 37
- GPIO 38
- GPIO 39

#### SPI flash intergrated on the ESP-WROOM-32

일부 보드들은 GPIO 6-11 핀도 사용 가능하지만 ESP-WROOM-32 칩에 내장된 SPI Flash와 연결되어있기 때문에 해당 칩을 사용하는 경우 다른 용도 사용을 권장하지 않음

- GPIO 6 (SCK/CLK)
- GPIO 7 (SDO/SD0)
- GPIO 8 (SDI/SD1)
- GPIO 9 (SHD/SD2)
- GPIO 10 (SWP/SD3)
- GPIO 11 (CSC/CMD)

#### Capacitive Touch GPIO

ESP32는 정전식 터치 입력이 가능, 10개의 터치 입력 센서 이용 가능

- T0 (GPIO 4)
- T1 (GPIO 0)
- T2 (GPIO 2)
- T3 (GPIO 15)
- T4 (GPIO 13)
- T5 (GPIO 12)
- T6 (GPIO 14)
- T7 (GPIO 27)
- T8 (GPIO 33)
- T9 (GPIO 32)

#### ADC (Analog-to-DIgital Converter)

18개의 12-bit(0-4095(3.3V)) ADC 채널

- ADC1_CH0 (GPIO 36)
- ADC1_CH1 (GPIO 37)
- ADC1_CH2 (GPIO 38)
- ADC1_CH3 (GPIO 39)
- ADC1_CH4 (GPIO 32)
- ADC1_CH5 (GPIO 33)
- ADC1_CH6 (GPIO 34)
- ADC1_CH7 (GPIO 35)
- ADC2_CH0 (GPIO 4)
- ADC2_CH1 (GPIO 0)
- ADC2_CH2 (GPIO 2)
- ADC2_CH3 (GPIO 15)
- ADC2_CH4 (GPIO 13)
- ADC2_CH5 (GPIO 12)
- ADC2_CH6 (GPIO 14)
- ADC2_CH7 (GPIO 27)
- ADC2_CH8 (GPIO 25)
- ADC2_CH9 (GPIO 26)

#### DAC (Digital-toAnalog Converter)

2개의 8-bit DAC 채널

- DAC1 (GPIO 25)
- DAC2 (GPIO 26)

#### RTC GPIO

There is RTC GPIO support on the ESP32. The GPIOs routed to the RTC low-power subsystem can be used when the ESP32 is in deep sleep. These RTC GPIOs can be used to wake up the ESP32 from deep sleep when the Ultra Low Power (ULP) co-processor is running. The following GPIOs can be used as an external wake up source.

- RTC_GPIO0 (GPIO 36)
- RTC_GPIO3 (GPIO 39)
- RTC_GPIO4 (GPIO 34)
- RTC_GPIO5 (GPIO 35)
- RTC_GPIO6 (GPIO 25)
- RTC_GPIO7 (GPIO 26)
- RTC_GPIO8 (GPIO 33)
- RTC_GPIO9 (GPIO 32)
- RTC_GPIO10 (GPIO 4)
- RTC_GPIO11 (GPIO 0)
- RTC_GPIO12 (GPIO 2)
- RTC_GPIO13 (GPIO 15)
- RTC_GPIO14 (GPIO 13)
- RTC_GPIO15 (GPIO 12)
- RTC_GPIO16 (GPIO 14)
- RTC_GPIO17 (GPIO 27)

#### PWM

출력 가능한 모든 핀은 PWM으로 사용 가능, 따라서 입력 전용 핀인 34-39는 PWM으로 사용 불가능

필요한 파라미터

- Signal Frequency
- Duty Cycle
- PWM Channel
- 신호를 출력할 GPIO핀

### I2C

ESP32에는 두 개의 I2C 채널이 있으며 모든 핀을 SDA 또는 SCL로 설정할 수 있음. Arduino IDE와 함께 ESP32를 사용할 경우 기본 I2C 핀은 다음과 같음

- GPIO 21 (SDA)
- GPIO 22 (SCL)

#### SPI

By default, the pin mapping for SPI is:

| SPI      | MOSI    | MISO    | CLK     | CS      |
| -------- | ------- | ------- | ------- | ------- |
| **VSPI** | GPIO 23 | GPIO 19 | GPIO 18 | GPIO 5  |
| **HSPI** | GPIO 13 | GPIO 12 | GPIO 14 | GPIO 15 |

#### Interupt

All GPIOs can be configured as interrupts.

#### Strapping Pin

이는 ESP32를 부팅 로더 또는 플래시 모드로 전환하는 데 사용됩니다. USB/Serial이 내장된 대부분의 개발 보드에서 이러한 핀의 상태에 대해 걱정할 필요가 없습니다. 보드는 핀을 점멸 또는 부팅 모드에 적합한 상태로 둡니다. ESP32 부팅 모드 선택에 대한 자세한 내용은 여기에서 확인할 수 있습니다.

그러나 이러한 핀에 주변 장치가 연결되어 있는 경우 새 코드를 업로드하려고 하면 ESP32가 새 펌웨어로 깜박이거나 보드를 재설정하는 데 문제가 있을 수 있습니다. 일부 주변 장치가 스트랩 핀에 연결되어 있는데 코드를 업로드하거나 ESP32를 깜박이는 데 문제가 있는 경우, 주변 장치가 ESP32를 올바른 모드로 전환하지 못하기 때문일 수 있습니다. 올바른 방향으로 안내하려면 부팅 모드 선택 설명서를 읽어 보십시오. 재설정, 깜박임 또는 부팅 후에는 이러한 핀이 예상대로 작동합니다.

- GPIO 0
- GPIO 2
- GPIO 4
- GPIO 5 (must be HIGH during boot)
- GPIO 12 (must be LOW during boot)
- GPIO 15 (must be HIGH during boot)

#### Pins High at Boot

일부 GPIO는 부팅 또는 재설정 시 상태를 HIGH로 변경하거나 PWM 신호를 출력함

- GPIO 1
- GPIO 3
- GPIO 5
- GPIO 6 to GPIO 11
  (connected to the ESP32 integrated SPI flash memory – not recommended to use).
- GPIO 14
- GPIO 15

#### Enable (EN)

EN은 3.3V 레귤레이터의 Enable핀으로, 풀업이 되어 있어 GND에 연결하면 3.3V 레귤레이터가 비활성화됨. 이 핀을 푸쉬버튼에 연결해 놓으면 ESP32를 재시동하는데 사용 가능

#### GPIO current drawn

The absolute maximum current drawn per GPIO is 40mA according to the “Recommended Operating Conditions” section in the ESP32 datasheet.

#### ESP32 Built-In Hall Effect Sensor

The ESP32 also features a built-in hall effect sensor that detects changes in the magnetic field in its surroundings.

> 아두이노 IDE에서 사용하는 경우 핀 번호 D23 (pin15/GPIO 23)핀은 '23'으로 사용하면 됨

### Reference

- https://github.com/espressif/arduino-esp32
